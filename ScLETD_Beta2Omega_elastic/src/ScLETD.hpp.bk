#ifndef _SCLETD_H_
#define _SCLETD_H_

#include <string.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <mm_malloc.h>
#include <math.h>
#include <time.h>
#include "mpi.h"
//#include "CNN.hpp"

#define f_A (2376.0 / 2372.0) // 1
#define f_B ((7128.0 + 12.0 * 2372.0) / 2372.0) // 15
#define f_C ((4752.0 + 12.0 * 2372.0) / 2372.0) // 14
#define PI 3.141592653589793

typedef double Dtype;
typedef unsigned short int Stype;

#define ORI 64
#define DIM 3

double tt;
double functime, runtime, walltime;
int ot2;
int ot1;
int ioutput;
int nout;
double rad;
double percent;
int rotation;
double *theta;
int ANISOTROPIC;
int nac, nch;
int iter;
int left, right, top, bottom, front, back;
int nx, ny, nz;

char processor_name[MPI_MAX_PROCESSOR_NAME];
int  namelen;
int nprocs, procs[3], myrank, prank, cart_id[3];
int periodic;
double *MPX, *MPY, *MPZ, *MPXI, *MPYI, *MPZI, *DDX, *DDY, *DDZ;
double *MPX_b, *MPY_b, *MPZ_b, *MPXI_b, *MPYI_b, *MPZI_b, *DDX_b, *DDY_b, *DDZ_b;
double A1, A2, A3, A4, A5, C1;
double dt, t_total;
double epn2;
double xmin, ymin, zmin;
double xmax, ymax, zmax;
//new
int lr_size, tb_size, fb_size;

double hx, hy, hz;
double kkx, kky, kkz;
int restart;
char work_dir[1024];
char data_dir[1024];
int restart_iter;
char restart_dir[1024];
int ini_num;
int nghost;
int ix1, ix2, ix3, ix4, iy1, iy2, iy3, iy4, iz1, iz2, iz3, iz4;
int lnx, lny, lnz, gnx, gny, gnz;
double alpha, beta;
int stage;
MPI_Datatype left_right, top_bottom, front_back;
MPI_Status *status;
MPI_Comm XYZ_COMM;
MPI_Comm YZ_COMM;
MPI_Comm R_COMM;
int color1, key1;
int irun, checkpoint,nchk, chk;
int counts;
//offset
size_t offset, offset_Er;
size_t u_fb, u_tb, u_lr;
size_t e_fb, e_tb, e_lr;
size_t offset2;

//cpu variables
struct Allen_Cahn
{
  double u;
  double LE, KE;
  Stype *field2b;
  double *fieldE;
  double *fieldEs_left, *fieldEr_left, *fieldEs_right, *fieldEr_right;
  double *fieldEs_top, *fieldEr_top, *fieldEs_bottom, *fieldEr_bottom;
  double *fieldEr_front, *fieldEr_back;
  double *fieldEs_front, *fieldEs_back;
  MPI_Request *ireq_left_right_fieldE, *ireq_top_bottom_fieldE, *ireq_front_back_fieldE;
} * ac;
  Stype *ac_fieldE;

#endif 
